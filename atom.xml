<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>世清の蜗居</title>
  
  <subtitle>记录生活的点滴</subtitle>
  <link href="https://baishiqing.github.io/atom.xml" rel="self"/>
  
  <link href="https://baishiqing.github.io/"/>
  <updated>2021-12-31T07:22:25.005Z</updated>
  <id>https://baishiqing.github.io/</id>
  
  <author>
    <name>白梓晨</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数学建模总结</title>
    <link href="https://baishiqing.github.io/2021/12/31/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E6%80%BB%E7%BB%93/"/>
    <id>https://baishiqing.github.io/2021/12/31/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E6%80%BB%E7%BB%93/</id>
    <published>2021-12-31T07:10:52.000Z</published>
    <updated>2021-12-31T07:22:25.005Z</updated>
    
    
    
    
    <category term="学习" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="数学建模" scheme="https://baishiqing.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>时间序列问题</title>
    <link href="https://baishiqing.github.io/2021/12/31/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98/"/>
    <id>https://baishiqing.github.io/2021/12/31/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98/</id>
    <published>2021-12-31T07:08:14.000Z</published>
    <updated>2022-01-03T05:25:31.689Z</updated>
    
    <content type="html"><![CDATA[ <span id="more"></span><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>时间序列过程是按时间排序的随机变量的集合，这个随机过程可以表示为</p><p>$${X_t|t \in T}$$</p><h3 id="符号定义"><a href="#符号定义" class="headerlink" title="符号定义"></a>符号定义</h3><ul><li>$T$是决定<strong>时序过程</strong>以及<strong>产生观测值</strong>的一个时间集合,</li><li>随机变量(Random variables)用大写字母表示，即$X_t$</li><li>观测值(Observations)用小写字母表示，即$x_t$</li></ul><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><ul><li>描述过去</li><li>分析规律</li><li>预测未来</li></ul><h2 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h2><h3 id="平稳序列"><a href="#平稳序列" class="headerlink" title="平稳序列"></a>平稳序列</h3><p>序列中的各观察值基本上在某个固定的水平随机波动</p><h3 id="非平稳序列"><a href="#非平稳序列" class="headerlink" title="非平稳序列"></a>非平稳序列</h3><ul><li>趋势（Trend）:时间序列数据均值随时间的长期持续变化</li><li>季节性影响（Seasonal effect）:以固定间隔重复的周期性波动</li><li>循环波动（cyclical fluctuation）：围绕长期趋势的一种波浪式或振荡式波动</li><li>无法解释的变化（Unexplained variation）:无法解释的变化是在任何趋势和季节性变化被去除后时间序列中其余的变化</li></ul><p>加法模型（Additive）：<br>$$X_t=m_t+s_t+e_t$$<br>乘法模型（Multiplicative）：<br>$$X_t=m_t<em>s_t</em>e_t$$<br>其中$m_t$表示趋势，$s_t$表示季节，$e_t$表示无法解释的变化。<br>ps:当趋势和季节性变化独立作用时，加法模型是合适的，而如果季节性效应的大小取决于趋势的大小，则需要乘法模型。</p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><ul><li>均值</li><li>方差，标准差</li><li>自协方差(autocovariance function (ACVF))</li><li>自相关函数(autocorrelation function (ACF))</li></ul><p>后两条可衡量线性的相关性，“auto”前缀表示不同时间点的随机变量的测量属性都存在。相关性是介于 -1 和 1 之间的协方差的缩放表现，其中 1 表示强正相关，0 表示独立性，-1 表示强负相关。</p><h3 id="图例："><a href="#图例：" class="headerlink" title="图例："></a>图例：</h3><ul><li><p>考虑由纯随机过程 生成的时间序列，它没有趋势、季节性或短期相关性<br><img src="https://s4.ax1x.com/2021/12/31/Thb1SK.jpg" alt="purely random data"></p></li><li><p>没有趋势或季节性但具有短期相关性的时间序列数据;在前几个滞后时具有显着正的自相关，随后在较大滞后时值接近零<br><img src="https://s4.ax1x.com/2021/12/31/Thb4pV.jpg" alt="short-term correlation"></p></li><li><p>没有趋势或季节性但在大值和小值之间交替的时间序列数据;在奇数滞后时具有负自相关，在偶数滞后时具有正自相关。随着滞后的增加，自相关越来越接近于零<br><img src="https://s2.loli.net/2021/12/31/gO9zhqNx2UZ8Qpi.jpg" alt="alternating data"></p></li><li><p>具有趋势的时间序列数据如下图所示，并且在滞后偏大时仍然具有正自相关。如果趋势随时间下降，则会观察到相同的相关图<br><img src="https://s4.ax1x.com/2021/12/31/ThqP7d.jpg" alt="data with a trend"></p></li><li><p>具有季节性影响的时间序列数据如下图所示，并且在相关图中具有规则的季节性模式。<br><img src="https://s4.ax1x.com/2021/12/31/ThqZ1f.jpg" alt="data with a seasonal effect">]</p></li><li><p>具有趋势和季节性影响的时间序列数据显示在下图中，并且在相关图中具有规则的季节性模式，由于趋势的存在，相关图通常具有正值。<br><img src="https://s4.ax1x.com/2021/12/31/Thq1Nn.jpg" alt="data with a trend and a seasonal effect">]</p></li></ul><h2 id="预测时间序列程序"><a href="#预测时间序列程序" class="headerlink" title="预测时间序列程序"></a>预测时间序列程序</h2><ol><li>确定时间序列成分<ol><li>确定趋势成分 确定趋势成分是否存在，可<strong>绘制时间序列的线图</strong>，看时间序列是否存在趋势，以及存在趋势是线性还是非线性。利用回归分析拟合一条趋势线，对回归系数进行显著性检验。回归系数显著，可得出线性趋势显著的结论。<br> <em>代码待定</em></li><li>确定季节成分 确定季节成分是否存在，至少需要两年数据，且数据需要按季度、月份、周或天来记录。可绘制<strong>年度折叠时间序列图</strong>（folded annual time series plot），需要将每年的数据分开画在图上，横轴只有一年的长度，每年的数据分别对应纵轴。如果时间序列<strong>只存在</strong>季节成分，年度折叠时间序列图中的折线将<strong>会有交叉</strong>；如果时间序列既含有季节成分又含有趋势，则年度折叠时间序列图中的折线将不会有交叉。</li></ol></li><li>选择预测方法</li><li>预测方法的评估</li><li>预测数据序列</li></ol>]]></content>
    
    
      
      
    <summary type="html"> &lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;时间序列过程是按时间排序的随机变量的集合，这个随机过程可以表示为&lt;/p&gt;
&lt;p&gt;$${X_</summary>
      
    
    
    
    <category term="学习" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="网络结构" scheme="https://baishiqing.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>学习Pytorch</title>
    <link href="https://baishiqing.github.io/2021/12/30/%E5%AD%A6%E4%B9%A0Pytorch/"/>
    <id>https://baishiqing.github.io/2021/12/30/%E5%AD%A6%E4%B9%A0Pytorch/</id>
    <published>2021-12-30T13:15:43.000Z</published>
    <updated>2021-12-31T10:26:46.799Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://handbook.pytorch.wiki/index.html">Pytorch中文百科</a></p><span id="more"></span><p><a href="https://tangshusen.me/Dive-into-DL-PyTorch/#/">Dive into DL Pytorch</a><p></p><ul><li><a href="https://blog.csdn.net/pan_andy/article/details/100992584">博客综述</a></li><li><a href="https://github.com/ShusenTang/Dive-into-DL-PyTorch">代码实现</a></li></ul><h2 id="PyTorch代码段合集"><a href="#PyTorch代码段合集" class="headerlink" title="PyTorch代码段合集"></a>PyTorch代码段合集</h2><ul><li><p>版本查询</p>  <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.__version__)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.version.cuda)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.backends.cudnn.version()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(torch.cuda.get_device_name(<span class="number">0</span>)</span></span>)</span><br></pre></td></tr></table></figure></li><li><p>显卡设置</p><ul><li>单张显卡:<br><code>device = torch.device(&#39;cuda&#39; if torch.cuda.is_available() else &#39;cpu&#39;)</code></li><li>多张显卡:  <figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"><span class="built_in">os</span>.environ[<span class="string">&#x27;CUDA_VISIBLE_DEVICES&#x27;</span>] = <span class="string">&#x27;0,1&#x27;</span></span><br></pre></td></tr></table></figure></li><li>清除显存:<ul><li>每次运行都清缓存:<br><code>torch.cuda.empty_cache()</code></li><li>也可以使用命令行重置GPU:<br><code>nvidia-smi --gpu-reset -i [gpu_id]</code></li></ul></li></ul></li><li><p>数据</p>  <figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor = torch.randn(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(tensor.<span class="keyword">type</span>())  # 数据类型</span><br><span class="line"><span class="built_in">print</span>(tensor.<span class="built_in">size</span>())  # 张量的<span class="built_in">shape</span>，是个元组</span><br><span class="line"><span class="built_in">print</span>(tensor.<span class="built_in">dim</span>())   # 维度的数量</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://handbook.pytorch.wiki/index.html&quot;&gt;Pytorch中文百科&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="AI实践基础" scheme="https://baishiqing.github.io/tags/AI%E5%AE%9E%E8%B7%B5%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Inception网络</title>
    <link href="https://baishiqing.github.io/2021/12/30/Inception%E7%BD%91%E7%BB%9C/"/>
    <id>https://baishiqing.github.io/2021/12/30/Inception%E7%BD%91%E7%BB%9C/</id>
    <published>2021-12-30T13:11:20.000Z</published>
    <updated>2021-12-30T13:17:44.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Inception网络"><a href="#Inception网络" class="headerlink" title="Inception网络"></a>Inception网络</h1><span id="more"></span><h2 id="InceptionV1"><a href="#InceptionV1" class="headerlink" title="InceptionV1"></a>InceptionV1</h2><p>Inception层：带有1x1卷积核；多个Inception层组合在一起就构成了Inception网络。</p><p><strong>代表作：GoogleNet</strong><br><img src="https://img-blog.csdn.net/20180608215827629?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3liZGVzaXJl/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="Inception原始版本"></p><ul><li>C_1X1: 28x28x192的输入数据，与64个1x1的卷积核做卷积后，得到28x28x64的输出</li><li>C_3X3: 28x28x192的输入数据，与128个3x3的卷积核做卷积后，得到28x28x128的输出</li><li>C_5X5: 28x28x192的输入数据，与32个5x5的卷积核做卷积后，得到28x28x32的输出</li><li>MP: 28x28x192的输入数据，做MaxPooling后（带padding），得到28x28x32的输出</li></ul><p>原理：在Inception层中，有多个卷积层结构（Conv）和Pooling结构（MaxPooling），它们利用了padding的原理，让经过这些结构的最终结果Shape不变。</p><p><strong>利用1x1的卷积核来降低计算量(减少weights，降低dimension)：</strong><br><img src="https://img-blog.csdn.net/20180608215901622?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3liZGVzaXJl/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="降维后的Inception版本"></p><h2 id="InceptionV2"><a href="#InceptionV2" class="headerlink" title="InceptionV2"></a>InceptionV2</h2><p>改进：</p><ul><li>加入BN(Batch Normalization)层：通过Reduce Internal Covariate Shift(减少内部数据分布发生变化，使每一层的输出都规范化到一个N(0, 1)的高斯);</li><li>使用2个3x3替代1个5x5卷积(既降低了参数数量，也加速计算)。<br><img src="https://www.pianshen.com/images/123/285d1cc3258f37d0e9679049734f0543.png" alt="InceptionV2"></li><li><em>代表作：改进版GoogleNet</em>*</li></ul><h2 id="InceptionV3"><a href="#InceptionV3" class="headerlink" title="InceptionV3"></a>InceptionV3</h2><p>改进：</p><ul><li>将7*7分解成两个一维的卷积（1x7,7x1），3x3也是一样（1x3,3x1），既可以加速学习，又加深了网络深度</li><li>增加了网络宽度</li></ul><p><strong>代表作：Inceptionv3版本的GoogleNet</strong></p><h2 id="InceptionV4"><a href="#InceptionV4" class="headerlink" title="InceptionV4"></a>InceptionV4</h2><p>改进：</p><ul><li>利用残差连接(Residual Connection)</li></ul><p><strong>代表作：Inception-ResNet-v1，Inception-ResNet-v2，Inception-v4</strong></p><h2 id="Xception"><a href="#Xception" class="headerlink" title="Xception"></a>Xception</h2><p>改进：</p><ul><li>通道分离式卷积：<br><img src="https://img-blog.csdn.net/20170915103536111" alt="Xception"><br>更改卷积操作顺序：Inception V3是先做1x1的通道卷积，再做3x3的空间卷积，这样就先将通道进行了合并;而Xception则正好相反，先进行空间的3x3卷积，再进行通道的1x1卷积</li><li>Xception在每个module中是没有RELU操作的</li></ul><p><a href="https://www.jianshu.com/p/25f0139637b7">数学公式md语法</a><br>$$H_{out}=\lfloor \frac{H_{in}+2<em>padding[0]-dilation[0]</em>(kernel_size[0]-1)-1}{stride[0]}+1 \rfloor$$</p><p>一般来说，默认padding=0,dilation=1,stride=1:<br>$H_{out}=H_{in}-kernel_size+1$</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Inception网络&quot;&gt;&lt;a href=&quot;#Inception网络&quot; class=&quot;headerlink&quot; title=&quot;Inception网络&quot;&gt;&lt;/a&gt;Inception网络&lt;/h1&gt;</summary>
    
    
    
    <category term="学习" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="网络结构" scheme="https://baishiqing.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>IDEA打包</title>
    <link href="https://baishiqing.github.io/2021/12/27/IDEA%E6%89%93%E5%8C%85/"/>
    <id>https://baishiqing.github.io/2021/12/27/IDEA%E6%89%93%E5%8C%85/</id>
    <published>2021-12-27T07:59:41.000Z</published>
    <updated>2021-12-28T03:57:52.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IDEA打包方式：jar包与war包"><a href="#IDEA打包方式：jar包与war包" class="headerlink" title="IDEA打包方式：jar包与war包"></a>IDEA打包方式：jar包与war包</h1> <span id="more"></span><p>jar包全称 Java Archive, 中文名叫 java 归档文件，这是一种与平台无关的文件格式。</p><p>war 包全称 JavaWeb Archive, 与 jar 包是类似。不过 war 包通常用于网站，它是一个可以直接运行的 web 模块。</p><p>一般主要是通过pom.xml决定你要打什么包</p><h2 id="前提知识："><a href="#前提知识：" class="headerlink" title="前提知识："></a>前提知识：</h2><ol><li>Project Structure(项目结构)</li><li>Artifacts选中Web Application: Exploded(工程组件的意思,可以理解为一个工程中的各个模块)</li><li>Archive是归档文件的意思</li></ol><h2 id="如何打包："><a href="#如何打包：" class="headerlink" title="如何打包："></a>如何打包：</h2><ul><li><p>无maven仓库：</p><ol><li>Project Structure-&gt;Artifacts-&gt;add Web Application:Exploded(若运行过IDEA项目，这一步可以忽略)</li><li>Project Structure-&gt;Artifacts-&gt;add Web Application:Archive</li><li>修改war包的一些属性<br><img src="https://s4.ax1x.com/2021/12/28/TrONGj.png" alt="Artifacts"><ul><li>Name:是war包的名字，可以随意定义</li><li>Type:是类型，这里是Archive的类型，也就是war包的类型</li><li>Output directory:是war包存储的位置，可以随意修改</li><li>Include in project build:如果把这个选项勾选，重新编译了之后，war包也会同步更新修改</li><li>Output Layout:是输出布局，也就是war包的目录结构</li></ul></li><li>Build-&gt;Build Artifacts-&gt;选中对应的war包-&gt;Build<br><img src="https://s3.bmp.ovh/imgs/2021/12/71caf75cf135ff99.png" alt="编译war包"><br><img src="https://s4.ax1x.com/2021/12/28/TrOCx1.png" alt="编译war包2"><ul><li>All Artifact:对所有模块进行操作</li><li>Build:进行编译打包</li><li>Rebuild:重现编译打包，会删除原来的war包，然后编译打包</li><li>Clean:清除war包</li><li>Edit:重新编辑war包的设置</li></ul></li></ol></li><li><p>有maven仓库：</p><ol><li>在IDEA界面的右边点击Maven-&gt;Lifecycle-&gt;clean-&gt;install</li><li>在控制台查看信息出现 BUILD SUCCESS 则打包成功</li><li>查看项目结构下会出现 target 文件夹(文件夹下的包需要看pom.xml)</li></ol></li></ul><h2 id="如何部署war包："><a href="#如何部署war包：" class="headerlink" title="如何部署war包："></a>如何部署war包：</h2><ol><li>在输出文件夹查看war包</li><li>将war包放到tomcat的webapps文件夹中(默认tomcat的conf文件夹下的server.xml配置)</li><li>进入Tomcat目录下的bin文件夹，双击运行startup.bat</li><li>在浏览器输入<a href="http://localhost:8080/war%E5%8C%85%E5%90%8D%E7%A7%B0">http://localhost:8080/war包名称</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;IDEA打包方式：jar包与war包&quot;&gt;&lt;a href=&quot;#IDEA打包方式：jar包与war包&quot; class=&quot;headerlink&quot; title=&quot;IDEA打包方式：jar包与war包&quot;&gt;&lt;/a&gt;IDEA打包方式：jar包与war包&lt;/h1&gt;</summary>
    
    
    
    <category term="学习" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="编程" scheme="https://baishiqing.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>一看就懂的md语法</title>
    <link href="https://baishiqing.github.io/2021/12/22/md%E8%AF%AD%E6%B3%95/"/>
    <id>https://baishiqing.github.io/2021/12/22/md%E8%AF%AD%E6%B3%95/</id>
    <published>2021-12-22T08:19:02.000Z</published>
    <updated>2021-12-31T01:38:15.210Z</updated>
    
    <content type="html"><![CDATA[<p><em>ps:其实md的底层最终还是将我们写的语法转化为html标签了,其中<code>\</code>表转义</em><br> <span id="more"></span></p><h2 id="字体控制："><a href="#字体控制：" class="headerlink" title="字体控制："></a>字体控制：<p></h2><ul><li><p>*斜体内容*的效果：<em>斜体</em></p></li><li><p>**加粗**的效果：<strong>加粗</strong></p></li><li><p>***加粗斜体***的效果：<em><strong>加粗斜体</strong></em></p></li><li><p>~~删除~~的效果：<del>删除</del></p></li><li><p>`代码行`的效果：<code>代码行</code></p></li><li><p>```代码块```的效果：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码块</span><br></pre></td></tr></table></figure></li><li><p>&gt; 引用内容的效果：(&gt;后面要有空格)</p><blockquote><p>引用内容</p></blockquote><ul><li>引用可以嵌套，如：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 一级引用</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; 二级引用</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 三级引用</span></span><br></pre></td></tr></table></figure>的效果：<blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote></li></ul></li><li><p><code>---</code> <code>***</code>都可以表示分割线，效果如下：</p></li></ul><hr><hr><ul><li>注脚：<br>使用Markdown<a href="Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">^1</a>可以效率的书写文档,直接转换成HTML<a href="HyperTextMarkupLanguage%E8%B6%85%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">^2</a></li></ul><ul><li>字体：  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;font <span class="attribute">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">face</span>=<span class="string">&quot;微软雅黑&quot;</span>&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">face</span>=<span class="string">&quot;STCAIYUN&quot;</span>&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">color</span>=#0099ff <span class="attribute">size</span>=2 <span class="attribute">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;我是黑体&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">color</span>=gray <span class="attribute">size</span>=5&gt;我是灰色&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">color</span>=#00ffff <span class="attribute">size</span>=3&gt;我是荧光色&lt;/font&gt;</span><br></pre></td></tr></table></figure>  的效果：<p><br>  <font face="黑体">我是黑体字</font><br>  <font face="微软雅黑">我是微软雅黑</font><br>  <font face="STCAIYUN">我是华文彩云</font><br>  <font color=gray size=5>我是灰色</font><br>  <font color=#00ffff size=3>我是荧光色</font></li></ul><h2 id="格式控制："><a href="#格式控制：" class="headerlink" title="格式控制："></a>格式控制：<p></h2><ul><li>无序列表<ul><li>嵌套列表</li></ul></li><li>无序列表</li></ul><ol><li>有序列表<ol><li>嵌套列表</li></ol></li><li>有序列表</li></ol><h2 id="超链接："><a href="#超链接：" class="headerlink" title="超链接："></a>超链接：</h2><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F202004%2F06%2F20200406132909_vm8TR.thumb.400_0.gif&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1642750593&t=90ca314547973d3d495d77a72b508b412" alt="皮卡丘fig"><br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.doershow.com%2Fuploads%2Fallimg%2F130926%2F1120131158-8.jpg&refer=http%3A%2F%2Fwww.doershow.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1642751061&t=c1a5baa8cf5f7356945d44ae0d5686df" alt="皮卡丘"></p><p><a href="https://www.csdn.net/">CSDN</a>是一个博客社区,任何人均可以在其上进行创作。</p><h2 id="数学公式："><a href="#数学公式：" class="headerlink" title="数学公式："></a>数学公式：</h2><p><a href="https://www.jianshu.com/p/25f0139637b7">数学公式md语法</a></p><p>行内公式：$ \Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt. $</p><p>行间公式：$$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt.$$<br>$$H_{out}=\lfloor \frac{H_{in}+2<em>padding[0]-dilation[0]</em>(kernel_size[0]-1)-1}{stride[0]}+1 \rfloor.$$</p><h2 id="表格设置："><a href="#表格设置：" class="headerlink" title="表格设置："></a>表格设置：<p></h2><p><em>冒号表示对齐方式，写在左边表示左对齐，右边为右对齐，两边都写表示居中</em><p><br><code>:-</code>表示左对齐，<code>:-:</code>表示居中，<code>-:</code>表示右对齐<br>属性1|属性2|属性3<br>:-|:-:|-:<br>abc|bcd|cde<br>abc|bcd|cde<br>abc|bcd|cde</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;em&gt;ps:其实md的底层最终还是将我们写的语法转化为html标签了,其中&lt;code&gt;\&lt;/code&gt;表转义&lt;/em&gt;&lt;br&gt;</summary>
    
    
    
    <category term="学习" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="基础知识" scheme="https://baishiqing.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客设置</title>
    <link href="https://baishiqing.github.io/2021/12/22/blogSetting/"/>
    <id>https://baishiqing.github.io/2021/12/22/blogSetting/</id>
    <published>2021-12-22T03:50:27.000Z</published>
    <updated>2021-12-31T07:21:57.208Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说，我们直接开整<br> <span id="more"></span></p><h1 id="设置博客摘要显示"><a href="#设置博客摘要显示" class="headerlink" title="设置博客摘要显示"></a>设置博客摘要显示</h1><p>修改主题配置文件，注意是theme文件夹下的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></span><br><span class="line">scroll_to_more: <span class="literal">true</span> <span class="comment">#选取博客正文&lt;!--more--&gt;前的内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically saving scroll position on each post/page in cookies.</span></span><br><span class="line">save_scroll: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line">excerpt_description: <span class="literal">true</span> <span class="comment">#自动截取摘要</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></span><br><span class="line"><span class="comment"># Use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line">auto_excerpt: </span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">false</span> <span class="comment">#自动截取一定程度的摘要</span></span><br><span class="line">  length: 150</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button would be displayed in excerpt section.</span></span><br><span class="line">read_more_btn: <span class="literal">true</span> <span class="comment">#显示阅读全文按钮</span></span><br></pre></td></tr></table></figure><p><strong>记得在博客内容中加入：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><h1 id="设置博客动态背景"><a href="#设置博客动态背景" class="headerlink" title="设置博客动态背景"></a>设置博客动态背景</h1><ol><li>修改_layout.swig文件</li></ol><p>打开 hexo-theme-next/layout/_layout.swig,在<code>&lt;body&gt;</code>中添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>修改主题配置文件</li></ol><p>打开 /hexo-theme-next/_config.yml,在里面添加如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="设置博客评论功能"><a href="#设置博客评论功能" class="headerlink" title="设置博客评论功能"></a>设置博客评论功能</h1><p>这里用的是<strong>来必力</strong>评论，支持多方登录评论</p><ol><li>注册并登录<a href="https://www.livere.com/">来必力</a>网站(只显示韩文)</li><li>点击网站中的安装，选择City版免费的，安装会跳转到安装代码<img src="https://img-blog.csdnimg.cn/dd54a22534a2446089ddf640dd71d797.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYmxhY2tzdW5kYXky,size_20,color_FFFFFF,t_70,g_se,x_16" alt="安装代码"></li><li>复制uid，打开主题配置文件_config.yml，搜索livere_uid，把uid填进去</li></ol><h1 id="设置页面宠物"><a href="#设置页面宠物" class="headerlink" title="设置页面宠物"></a>设置页面宠物</h1><p>1.在博客根目录下执行：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">npm</span> install -save hexo-helper-live<span class="number">2</span>d</span><br><span class="line"><span class="attribute">npm</span> install live<span class="number">2</span>d-widget-model-wanko</span><br></pre></td></tr></table></figure><p><strong>第一行是下载live2d插件，第二行是下载wanko这个宠物</strong><p><br><em>其中可能会遇到版本报错，不用理会即可</em><p><br>2.在站点配置文件中加入：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span>  <span class="comment">#选择哪种模型</span></span><br><span class="line">  <span class="attr">display:</span> <span class="comment">#放置位置和大小</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span> <span class="comment">#是否在手机端显示</span></span><br></pre></td></tr></table></figure><blockquote><p>友情提示：由于github访问问题，在执行hexo d之后页面仍然没有效果，可以使用hexo s现在本地查看。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;废话不多说，我们直接开整&lt;br&gt;</summary>
    
    
    
    <category term="学习" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="娱乐" scheme="https://baishiqing.github.io/categories/%E5%AD%A6%E4%B9%A0/%E5%A8%B1%E4%B9%90/"/>
    
    
    <category term="基础知识" scheme="https://baishiqing.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://baishiqing.github.io/2021/12/18/test/"/>
    <id>https://baishiqing.github.io/2021/12/18/test/</id>
    <published>2021-12-18T10:10:22.000Z</published>
    <updated>2021-12-31T07:21:13.896Z</updated>
    
    <content type="html"><![CDATA[<h2 id="this-is-a-test"><a href="#this-is-a-test" class="headerlink" title="this is a test"></a>this is a test</h2><p>写作动力：就是玩</p><span id="more"></span><p><strong>说明</strong><br>&emsp;&emsp;这是一个说明</p><blockquote><p>纸上得来终觉浅，绝知此事要躬行</p></blockquote><p><img src="https://img2.baidu.com/it/u=1917350432,4231958219&fm=26&fmt=auto" alt="test"><br><img src="https://img0.baidu.com/it/u=1985874529,2483152613&fm=253&fmt=auto&app=138&f=JPEG?w=889&h=500" alt="test"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;this-is-a-test&quot;&gt;&lt;a href=&quot;#this-is-a-test&quot; class=&quot;headerlink&quot; title=&quot;this is a test&quot;&gt;&lt;/a&gt;this is a test&lt;/h2&gt;&lt;p&gt;写作动力：就是玩&lt;/p&gt;</summary>
    
    
    
    <category term="娱乐" scheme="https://baishiqing.github.io/categories/%E5%A8%B1%E4%B9%90/"/>
    
    
    <category term="test" scheme="https://baishiqing.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://baishiqing.github.io/2021/12/18/hello-world/"/>
    <id>https://baishiqing.github.io/2021/12/18/hello-world/</id>
    <published>2021-12-18T10:00:03.565Z</published>
    <updated>2021-12-30T13:20:03.127Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>！ 这是你的第一篇文章，查看 <a href="https://hexo.io/docs/">文档</a> 了解更多信息。如果你在使用 Hexo 时遇到任何问题，可以在<a href="https://github.com/hexojs/hexo/issues">GitHub</a> 上询问。<br> <span id="more"></span></p><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h2 id="创建一个新帖子"><a href="#创建一个新帖子" class="headerlink" title="创建一个新帖子"></a>创建一个新帖子</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h2 id="创建另起一页"><a href="#创建另起一页" class="headerlink" title="创建另起一页"></a>创建另起一页</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h2 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h2 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a>s</p><h2 id="部署简写"><a href="#部署简写" class="headerlink" title="部署简写"></a>部署简写</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;欢迎来到 &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;！ 这是你的第一篇文章，查看 &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;文档&lt;/a&gt; 了解更多信息。如果你在使用 Hexo 时遇到任何问题，可以在&lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt; 上询问。&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
